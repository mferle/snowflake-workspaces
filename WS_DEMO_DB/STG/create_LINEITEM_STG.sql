CREATE OR ALTER TABLE WS_DEMO_DB.STG.LINEITEM_STG (
    ORDER_ID NUMBER,
    PART_ID NUMBER,
    SUPPLIER_ID NUMBER,
    LINE_NUMBER NUMBER,
    QUANTITY NUMBER,
    EXTENDED_PRICE NUMBER,
    DISCOUNT NUMBER,
    TAX NUMBER,
    RETURN_FLAG VARCHAR,
    LINE_STATUS VARCHAR,
    SHIP_DATE DATE,
    COMMIT_DATE DATE,
    RECEIPT_DATE DATE,
    SHIPPING_INSTRUCTIONS VARCHAR,
    SHIPPING_MODE VARCHAR,
    LOAD_TIMESTAMP TIMESTAMP
);

MERGE INTO WS_DEMO_DB.STG.LINEITEM_STG AS TGT
USING WS_DEMO_DB.EX.LINEITEM_EX AS SRC
ON TGT.ORDER_ID = SRC.L_ORDERKEY 
AND TGT.LINE_NUMBER = SRC.L_LINENUMBER
WHEN MATCHED THEN UPDATE SET
    PART_ID = SRC.L_PARTKEY,
    SUPPLIER_ID = SRC.L_SUPPKEY,
    QUANTITY = SRC.L_QUANTITY,
    EXTENDED_PRICE = SRC.L_EXTENDEDPRICE,
    DISCOUNT = SRC.L_DISCOUNT,
    TAX = SRC.L_TAX,
    RETURN_FLAG = SRC.L_RETURNFLAG,
    LINE_STATUS = SRC.L_LINESTATUS,
    SHIP_DATE = SRC.L_SHIPDATE,
    COMMIT_DATE = SRC.L_COMMITDATE,
    RECEIPT_DATE = SRC.L_RECEIPTDATE,
    SHIPPING_INSTRUCTIONS = SRC.L_SHIPINSTRUCT,
    SHIPPING_MODE = SRC.L_SHIPMODE,
    LOAD_TIMESTAMP = CURRENT_TIMESTAMP()
WHEN NOT MATCHED THEN INSERT (
    ORDER_ID,
    PART_ID,
    SUPPLIER_ID,
    LINE_NUMBER,
    QUANTITY,
    EXTENDED_PRICE,
    DISCOUNT,
    TAX,
    RETURN_FLAG,
    LINE_STATUS,
    SHIP_DATE,
    COMMIT_DATE,
    RECEIPT_DATE,
    SHIPPING_INSTRUCTIONS,
    SHIPPING_MODE,
    LOAD_TIMESTAMP
) VALUES (
    SRC.L_ORDERKEY,
    SRC.L_PARTKEY,
    SRC.L_SUPPKEY,
    SRC.L_LINENUMBER,
    SRC.L_QUANTITY,
    SRC.L_EXTENDEDPRICE,
    SRC.L_DISCOUNT,
    SRC.L_TAX,
    SRC.L_RETURNFLAG,
    SRC.L_LINESTATUS,
    SRC.L_SHIPDATE,
    SRC.L_COMMITDATE,
    SRC.L_RECEIPTDATE,
    SRC.L_SHIPINSTRUCT,
    SRC.L_SHIPMODE,
    CURRENT_TIMESTAMP()
);